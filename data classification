import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
%matplotlib inline
from pandas.plotting import scatter_matrix
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import StratifiedKFold
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC
from sklearn import model_selection
from sklearn.ensemble import VotingClassifier
names=['sepal-length','sepal-width','petal-length','petal-width','class']
dataset=pd.read_csv("E:\Iris.csv",names=names)
dataset.head(20)
dataset.shape
dataset.describe()
print(dataset.groupby('class').size())
dataset.plot(kind="box",subplots=True,layout=(2,2))
dataset.hist()
plt.show()
scatter_matrix(dataset)
plt.show
array=dataset.values
X=array[:,0:4]
Y=array[:,4]
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=42)
models=[]
models.append(('LR',LogisticRegression(solver='liblinear',multi_class='ovr')))
models.append(('LDA',LinearDiscriminantAnalysis()))
models.append(('KNN',KNeighborsClassifier()))
models.append(('NB',GaussianNB()))
models.append(('SVM',SVC(gamma='auto')))
results=[]
names=[]
for name,model in models:
    kfold=StratifiedKFold(n_splits=10,random_state=42)
    cv_results=cross_val_score(model,X_train,Y_train,cv=kfold,scoring='accuracy')
    results.append(cv_results)
    names.append(name)
    print('%s:%f(%f)'%(name,cv_results.mean(),cv_results.std()))
#evaluate our prediction
print(accuracy_score(Y_test,prediction))
print(confusion_matrix(Y_test,prediction))
print(classification_report(Y_test,prediction))
